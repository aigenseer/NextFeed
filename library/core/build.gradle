buildscript {
    ext {
        protobufVersion = '3.19.1'
        protobufPluginVersion = '0.8.18'
        grpcVersion = '1.42.1'
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
    id 'com.google.protobuf' version "${protobufPluginVersion}"
    id 'idea'
}


group = 'com.nextfeed.library.core'
version = '0.0.1-SNAPSHOT'

bootJar {
    enabled = false
}

compileJava   {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    compileOnlyApi 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.2'

    implementation 'io.kubernetes:client-java:15.0.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'

    implementation 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
//  Prometheus Support with Micrometer
    implementation 'io.micrometer:micrometer-core:1.9.3'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.9.3'

    implementation 'net.devh:grpc-client-spring-boot-starter:2.13.1.RELEASE'
    implementation 'net.devh:grpc-server-spring-boot-starter:2.13.1.RELEASE'

    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5' // Java 9+ compatibility - Do NOT update to 2.0.0
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

idea {
    module {
        sourceDirs += file('src/generated/main/java')
        sourceDirs += file('src/generated/main/grpc')
        generatedSourceDirs += file('src/generated/main/java')
        generatedSourceDirs += file('src/generated/main/grpc')
    }
}
